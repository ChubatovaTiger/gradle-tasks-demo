
allprojects {
    repositories {
         maven {
            url 'http://localhost:8081/artifactory/plugins-release'
        }
    }
}
buildscript {
    repositories {
    
        maven {
            url 'http://localhost:8081/artifactory/plugins-release'
        }
        //jcenter()
        //mavenLocal()
        //mavenCentral()
        //maven { url 'http://download.crashlytics.com/maven' }
    }
    dependencies {
         classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}

version = currentVersion

apply plugin: 'com.jfrog.artifactory'
apply plugin: 'java'
apply plugin: 'maven-publish'

dependencies {
    testCompile 'junit:junit:4.7'
    
        //compile group: 'commons-io', name: 'commons-io', version: '2.5'
        // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
        //compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
        // https://mvnrepository.com/artifact/commons-collections/commons-collections
     //compile group: 'commons-collections', name: 'commons-collections', version: '3.2.1'

}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}



artifactory {
    contextUrl = 'http://localhost:8081/artifactory'
    publish {
        repository {
            repoKey = 'libs-snapshot-local' // The Artifactory repository key to publish to
            username = "admin" // The publisher user name
            password = "password" // The publisher password
        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('mavenJava')
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team' : 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
    resolve {
        repoKey = 'jcenter'
    }
}




task testTask(type: JavaExec){
main='src.main.java.test'
classpath=sourceSets.main.runtimeClasspath

} 
task wrapper(type: Wrapper) {
     gradleVersion = '2.10' //we want gradle 2.10 to run this project
 }

